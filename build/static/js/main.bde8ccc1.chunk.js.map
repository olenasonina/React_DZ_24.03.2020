{"version":3,"sources":["components/MovieItem.js","components/App.js","index.js"],"names":["MovieItem","React","Component","constructor","super","this","state","myWillWatch","render","props","myMovie","removeMyMovie","addMyMovie","removeMyMovieFromWillWatch","className","src","backdrop_path","poster_path","alt","title","vote_average","type","onClick","console","log","setState","bind","App","newMovies","myMovies","filter","item","id","newWillWatch","willWatch","push","newRemoveMovies","componentDidMount","fetch","then","response","json","data","results","map","key","length","ReactDOM","document","getElementById"],"mappings":"iMAEA,MAAMA,UAAkBC,IAAMC,UAC1BC,cACIC,QACAC,KAAKC,MAAQ,CACTC,aAAa,GAGvBC,SAAU,MAAD,EACoEH,KAAKI,MAAxEC,EADD,EACCA,QAASC,EADV,EACUA,cAAeC,EADzB,EACyBA,WAAYC,EADrC,EACqCA,2BAC5C,OACI,yBAAKC,UAAU,QACX,yBAAKA,UAAU,eAAeC,IAAG,yCAAoCL,EAAQM,eAAiBN,EAAQO,aAAeC,IAAKR,EAAQS,QACnI,yBAAKL,UAAU,aACX,wBAAIA,UAAU,cAAcJ,EAAQS,OACpC,yBAAKL,UAAU,qDACX,uBAAGA,UAAU,QAAb,WAA6BJ,EAAQU,cACpCf,KAAKC,MAAMC,YAER,4BAAQc,KAAK,SACTP,UAAWT,KAAKC,MAAMC,YAAc,kBAAoB,oBACxDe,QAAW,KACPC,QAAQC,IAAId,GACXL,KAAKC,MAAMC,YAAcF,KAAKoB,SAAS,CAAClB,aAAa,IAAUF,KAAKoB,SAAS,CAAClB,aAAa,IAC5FM,EAA2BH,KALnC,qBAWA,4BAAQW,KAAK,SACTP,UAAWT,KAAKC,MAAMC,YAAc,kBAAoB,oBACxDe,QAAW,KACPC,QAAQC,IAAId,GACXL,KAAKC,MAAMC,YAAcF,KAAKoB,SAAS,CAAClB,aAAa,IAAUF,KAAKoB,SAAS,CAAClB,aAAa,IAC5FK,EAAWF,KALnB,mBAWR,4BAAQI,UAAU,OAAOO,KAAK,SAASC,QAASX,EAAce,KAAKrB,KAAMK,IAAzE,mBAoEAV,QCxGf,MAAM2B,UAAY1B,IAAMC,UACtBC,cACEC,QADY,KAqBdO,cAAgBD,IACd,MAAMkB,EAAYvB,KAAKC,MAAMuB,SAASC,QAAO,SAASC,GACnD,OAAOA,EAAKC,KAAOtB,EAAQsB,MAE9B3B,KAAKoB,SACH,CAACI,SAAUD,KA1BD,KA8BdhB,WAAaF,IACX,MAAMuB,EAAe,IAAI5B,KAAKC,MAAM4B,WACpCD,EAAaE,KAAKzB,GAClBL,KAAKoB,SACD,CAACS,UAAWD,KAlCJ,KAsCdpB,2BAA6BH,IAC3B,MAAM0B,EAAkB/B,KAAKC,MAAM4B,UAAUJ,QAAO,SAASC,GAC3D,OAAOA,EAAKC,KAAOtB,EAAQsB,MAE7B3B,KAAKoB,SACD,CAACS,UAAWE,KAzChB/B,KAAKC,MAAQ,CACXuB,SAAU,GACVK,UAAW,IAIfG,oBACEC,MAAM,iNACDC,KAAMC,IACLjB,QAAQC,IAAI,QACLgB,EAASC,SACdF,KAAMG,IACTnB,QAAQC,IAAI,OAAQkB,GACpBrC,KAAKoB,SACD,CAACI,SAAUa,EAAKC,YA+B3BnC,SACA,OACI,yBAAKM,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,OACZT,KAAKC,MAAMuB,SAASe,IAAKlC,GAEpB,yBAAKI,UAAU,aAAa+B,IAAKnC,EAAQsB,IACrC,kBAAC,EAAD,CAAWtB,QAASA,EAASC,cAAeN,KAAKM,cAAeC,WAAYP,KAAKO,WAAYC,2BAA4BR,KAAKQ,iCAM5I,yBAAKC,UAAU,SACb,0CAAgBT,KAAKC,MAAM4B,UAAUY,QACrC,wBAAIhC,UAAU,cACbT,KAAKC,MAAM4B,UAAUU,IAAKlC,GAErB,wBAAImC,IAAKnC,EAAQsB,GAAIlB,UAAU,mBAC7B,yBAAKA,UAAU,kCACb,2BAAIJ,EAAQS,OACZ,2BAAIT,EAAQU,sBAuFnBO,Q,MC7JfoB,IAASvC,OAAO,kBAAC,EAAD,MAASwC,SAASC,eAAe,U","file":"static/js/main.bde8ccc1.chunk.js","sourcesContent":["import React from \"react\";\n\nclass MovieItem extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            myWillWatch: false\n        }\n    }\n  render() {\n    const { myMovie, removeMyMovie, addMyMovie, removeMyMovieFromWillWatch } = this.props;\n    return (\n        <div className=\"card\">\n            <img className=\"card-img-top\" src={`https://image.tmdb.org/t/p/w500${myMovie.backdrop_path || myMovie.poster_path}`} alt={myMovie.title} />\n           <div className=\"card-body\">\n               <h6 className=\"card-title\">{myMovie.title}</h6>\n               <div className=\"d-flex justify-content-between align-items-center\">\n                   <p className=\"mb-0\">Rating: {myMovie.vote_average}</p>\n                   {this.state.myWillWatch\n                       ?\n                       <button type=\"button\"\n                           className={this.state.myWillWatch ? \"btn btn-success\" : \"btn btn-secondary\"}\n                           onClick = {() => {\n                               console.log(myMovie);\n                               {this.state.myWillWatch ? this.setState({myWillWatch: false}) : this.setState({myWillWatch: true})}\n                               removeMyMovieFromWillWatch(myMovie);\n                           }}\n                        >\n                       Remove will watch\n                        </button>\n                       :\n                       <button type=\"button\"\n                           className={this.state.myWillWatch ? \"btn btn-success\" : \"btn btn-secondary\"}\n                           onClick = {() => {\n                               console.log(myMovie);\n                               {this.state.myWillWatch ? this.setState({myWillWatch: false}) : this.setState({myWillWatch: true})}\n                               addMyMovie(myMovie);\n                           }}\n                       >\n                       Add will watch\n                       </button>}\n               </div>\n               <button className=\"mb-4\" type=\"button\" onClick={removeMyMovie.bind(this, myMovie)}>Delete movie</button>\n           </div>\n        </div>\n    )\n  }\n  \n  \n  \n  // constructor() {\n  //   super();\n\n  //   this.state = {\n  //     willWatch: false\n  //   };\n  // }\n  // render() {\n  //   console.log(\"--- MovieItem ---\");\n  //   const { movie, removeMovie, appThis } = this.props;\n  //   // console.log(\"appThis\", appThis, \"single movie\", movie);\n  //   return (\n  //     <div className=\"card\">\n  //       <img\n  //         className=\"card-img-top\"\n  //         src={`https://image.tmdb.org/t/p/w500${movie.backdrop_path ||\n  //           movie.poster_path}`}\n  //         alt=\"\"\n  //       />\n  //       <div className=\"card-body\">\n  //         <p> {this.state.willWatch ? \"NOT will\" : \"will\"} </p>\n  //         <h6 className=\"card-title\">{movie.title}</h6>\n  //         <div className=\"d-flex justify-content-between align-items-center\">\n  //           <p className=\"mb-0\">Rating: {movie.vote_average}</p>\n  //         </div>\n\n  //         <div className=\"d-flex justify-content-end align-items-center mt-3\">\n  //           <button\n  //             type=\"button\"\n  //             className=\"btn btn-info btn-sm\"\n  //             onClick={() => {\n  //               console.log(\"Clickkk\", this.state.willWatch);\n  //               this.state.willWatch\n  //                 ? this.setState({\n  //                     willWatch: false\n  //                   })\n  //                 : this.setState({\n  //                     willWatch: true\n  //                   });\n  //             }}\n  //           >\n  //             Will Watch\n  //           </button>\n  //           <button\n  //             type=\"button\"\n  //             title=\"{movie.title}\"\n  //             className=\"btn btn-danger btn-sm mx-2\"\n  //           //   onClick={ () => {console.log(this)} }\n  //             onClick={removeMovie.bind(appThis, movie) }\n  //           //   onClick={removeMovie(this, movie) }\n  //           >\n  //             <span className=\"material-icons\">delete_forever</span>\n  //           </button>\n  //         </div>\n  //       </div>\n  //     </div>\n  //   );\n  // }\n}\n\nexport default MovieItem;\n","import React from \"react\";\nimport { moviesData } from \"../moviesData\";\nimport MovieItem from \"./MovieItem\";\n\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      myMovies: [],\n      willWatch: []\n    }\n  }\n\n  componentDidMount() {\n    fetch(\"http://cors-anywhere.herokuapp.com/\" + \"https://api.themoviedb.org/3/discover/movie?api_key=3f4ca4f3a9750da53450646ced312397&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1\")\n        .then((response) => {\n          console.log(\"then\");\n          return response.json()\n         }).then((data) => {\n         console.log(\"data\", data)\n         this.setState(\n             {myMovies: data.results}\n    )\n    })\n  }\n\n  removeMyMovie = myMovie => {\n    const newMovies = this.state.myMovies.filter(function(item) {\n       return item.id !== myMovie.id;\n    });\n    this.setState(\n      {myMovies: newMovies}\n    );\n  };\n\n  addMyMovie = myMovie => {\n    const newWillWatch = [...this.state.willWatch];\n    newWillWatch.push(myMovie);\n    this.setState(\n        {willWatch: newWillWatch}\n        );\n  };\n\n  removeMyMovieFromWillWatch = myMovie => {\n    const newRemoveMovies = this.state.willWatch.filter(function(item) {\n      return item.id !== myMovie.id;\n    });\n    this.setState(\n        {willWatch: newRemoveMovies}\n    );\n  };\n\n  render() {\n  return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-9\">\n            <div className=\"row\">\n              {this.state.myMovies.map( myMovie => {\n                return(\n                    <div className=\"col-6 mb-4\" key={myMovie.id}>\n                        <MovieItem myMovie={myMovie} removeMyMovie={this.removeMyMovie} addMyMovie={this.addMyMovie} removeMyMovieFromWillWatch={this.removeMyMovieFromWillWatch} />\n                    </div>\n                    );\n              })}\n            </div>\n          </div>\n          <div className=\"col-3\">\n            <p>Will watch: {this.state.willWatch.length}</p>\n            <ul className=\"list-group\">\n            {this.state.willWatch.map( myMovie => {\n              return (\n                  <li key={myMovie.id} className=\"list-group-item\">\n                    <div className=\"d-flex justify-content-between\">\n                      <p>{myMovie.title}</p>\n                      <p>{myMovie.vote_average}</p>\n                    </div>\n                  </li>\n              )\n            })}\n            </ul>\n          </div>\n        </div>\n      </div>\n\n  )\n  }\n}\n\n\n\n// function removeMovie (movie) {\n//   console.log(\"/// removeMovie\");\n//   console.log(this, \"MOVIE single\", movie);\n\n//   const updateMovies = this.state.movies.filter(function (item) {\n//     return item.id  !== movie.id;\n//   })\n//   console.log(updateMovies);\n//   this.setState({\n//     movies: updateMovies\n//   })\n// }\n\n// class App extends React.Component {\n//   constructor() {\n//     super();\n\n//     this.state = {\n//       movies: moviesData,\n//       moviesWillWatch: []\n//     };\n\n//     // this.removeMovie = this.removeMovie.bind(this);\n//   }\n\n//   render() {\n//     console.log(\"--- App ---\");\n//     console.log(\"App render\", this.state);\n//     // console.log(\"App this\", this.state.movies[1].title);\n//     return (\n//       <div className=\"container\">\n//         <div className=\"row\">\n//           <MovieList movies={this.state.movies} appThis = {this}/>\n//           <div className=\"col-4 col-sm-3 mt-4\">\n//             <h4>Will Watch: {this.state.moviesWillWatch.length} movies</h4>\n//             <ul className=\"list-group\">\n//               <li className=\"list-group-item\">\n//                 <div className=\"d-flex justify-content-between\">1111 </div>\n//               </li>\n//             </ul>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// class MovieList extends React.Component {\n//   render() {\n//     const { movies, appThis } = this.props;\n//     console.log(\"--- MovieList ---\");\n//     // console.log(this.props);\n//     // console.log(\"MovieList movies\", movies, removeMovie);\n//     return (\n//       <div className=\"col-8 col-sm-9\">\n//         <div className=\"row\">\n//           {movies.map(function(movie) {\n//             return (\n//               <div className=\"offset-1 col-10 offset-sm-0 col-sm-6 mt-4\" key={movie.id}>\n//                 <MovieItem movie={movie} removeMovie={removeMovie} appThis = {appThis} />\n//               </div>\n//             );\n//           }, this)}\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}